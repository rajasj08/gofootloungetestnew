<?xml version="1.0" encoding="UTF-8"?>

<modification>

	<id>Search Analytics</id>
	<version>1.0.0</version>
	<vqmver>2.5.1+</vqmver>
	<author>Frank - francesco1279@gmail.com - Leverod.com</author>
	
	<file name="system/startup.php">
		<operation error="log" >
			<search position="after" ><![CDATA[error_reporting(]]></search>
			<add><![CDATA[	

			// Search Analytics

				require_once(DIR_SYSTEM . 'library/search_analytics.php');
			
			// END Search Analytics
			
			]]></add>
		</operation>
	</file>
	
	
	<file  name="catalog/controller/product/search.php">
		<operation>
			<search position="after" error="log"><![CDATA[public function index() {]]></search>
				<add><![CDATA[
				
							// "search" (OC >= 1.5.5) / "filter_name" (OC < 1.5.5)
							
							if ( isset($this->request->get['search']) ) {
							
								$search = $this->request->get['search']; 
								
							} elseif ( isset($this->request->get['filter_name']) ) {
							
								$search = $this->request->get['filter_name'];
								
							} else {
							
								$search = '';
							}
							
							$customer_id	= $this->customer->getId(); // 0 if Guest
							
							$this->load->model('catalog/product'); 
							$this->model_catalog_product->addSearch($search, $customer_id);
				]]></add>
		</operation>	
	</file>
	
	<file  name="catalog/model/catalog/product.php">
		<operation>
			<search position="before" error="log"><![CDATA[public function getProduct($product_id) {]]></search>
				<add><![CDATA[
					public function addSearch($search, $customer_id){
					
						// Sanitize the search query before saving it in the database:
						
						$search_analytics_lib = new Search_analytics();
						$search = $search_analytics_lib->sanitize_keyphrases($search);
						
						if (empty($search)) {
							return;
						}
						
						// Enable this if your server is behind a Proxy/Load Balancer
					
						// When OpenCart is deployed behind a load balancer, the Client IP address shows the load balancer's IP address.
						// OpenCart should get the real client IP address looking at the HTTP_X_FORWARDED_FOR instead of REMOTE_ADDR.
					
					/*
						if (!empty($_SERVER['HTTP_CLIENT_IP'])) { 
						
							$ip =  $this->db->escape($this->request->server['HTTP_CLIENT_IP']);
						}
						elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {

							$ip =  $this->db->escape($this->request->server['HTTP_X_FORWARDED_FOR']);
						}
						else {
							$ip =  $this->db->escape($this->request->server['REMOTE_ADDR']);
						}
					*/	
						// Disable this line if the above code is enabled:
						$ip = $this->db->escape($this->request->server['REMOTE_ADDR']);
						
						// Check if the table search_history exists:
						$sql = "SHOW TABLES LIKE '" . DB_PREFIX . "search_history'";
						$result = $this->db->query($sql);
						
						if ($result->num_rows > 0 ) {
						
							$sql = "INSERT INTO " . DB_PREFIX . "search_history(keyphrase, customer_id, ip) VALUES('" . $search . "','" . $customer_id . "','" . $ip . "')";
							$this->db->query($sql);
						}
					}
				]]></add>
		</operation>
	</file>

</modification>